AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "Lambda Instagram Followers Chart"

Resources:
  ScraperFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bin
      Handler: scraper
      Runtime: go1.x
      Timeout: 300

      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: "2012-10-17"
          Statement:
            - 
              Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt LogsTable.Arn

      Environment:
        Variables:
          IG_USERNAME: ""
          LOGS_TABLE: !Ref LogsTable

  ScheduledScraper:
    Type: AWS::Events::Rule
    Properties:
      Description: ScheduledScraper
      ScheduleExpression: cron(0 0 ? * * *)
      State: ENABLED
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - ScraperFunction
              - Arn
          Id: TargetFunctionV1
  PermissionForEventsToInvokeScraperFunction:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: ScraperFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - ScheduledScraper
          - Arn

  DrawingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bin
      Handler: drawing
      Runtime: go1.x
      Timeout: 300

      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: "2012-10-17"
          Statement:
            - 
              Effect: Allow
              Action:
                - dynamodb:Query
              Resource:
                - !Join [ "", [ !GetAtt LogsTable.Arn, "*" ] ]
            - Effect: Allow
              Action:
              - s3:PutObject
              - s3:PutObjectAcl
              Resource: !Sub ${ChartBucket.Arn}/*

      Environment:
        Variables:
          IG_USERNAME: ""
          LOGS_TABLE: !Ref LogsTable
          CHART_BUCKET: !Ref ChartBucket

  ScheduledDrawing:
    Type: AWS::Events::Rule
    Properties:
      Description: ScheduledDrawing
      ScheduleExpression: cron(10 0 ? * * *)
      State: ENABLED
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - DrawingFunction
              - Arn
          Id: TargetFunctionV1
  PermissionForEventsToInvokeDrawingFunction:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: DrawingFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - ScheduledDrawing
          - Arn
    
  LogsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions: 
        - 
          AttributeName: "time"
          AttributeType: "S"
        - 
          AttributeName: "username"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "username"
          KeyType: "HASH"
        - 
          AttributeName: "time"
          KeyType: "RANGE"
      BillingMode: "PAY_PER_REQUEST"

  ChartBucket:
    Type: AWS::S3::Bucket

Outputs:
  LogsTable:
    Description: "Logs Dynamo DB table"
    Value:
      Fn::GetAtt:
      - LogsTable
      - Arn
  ChartBucket:
    Description: "S3 Bucket name that keeps chart"
    Value: !Ref ChartBucket